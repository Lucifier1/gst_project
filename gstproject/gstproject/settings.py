"""
Django settings for gstproject project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv
from datetime import timedelta

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECURITY_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition


THIRDPARTY_APPS = [
    'django_admin_dracula',
    'rest_framework',
    'import_export',
    'simple_history',
    'daphne',
    'channels',
    'django_extensions',
]

DJANGO_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

LOCAL_APPS = [
    'app_modules.adminapp',
    'app_modules.userapp',
    'app_modules.chat',
]

INSTALLED_APPS = THIRDPARTY_APPS + DJANGO_APPS + LOCAL_APPS

SITE_ID = 1

AUTH_USER_MODEL = 'adminapp.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'gstproject.middleware.custom_middlewares.CaptureUserInformationMiddleWare',
    'simple_history.middleware.HistoryRequestMiddleware',
]

ROOT_URLCONF = 'gstproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR/'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'app_modules.adminapp.context_processors.global_data',
            ],
        },
    },
]

# WSGI_APPLICATION = 'gstproject.wsgi.application'

ASGI_APPLICATION = 'gstproject.asgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get("DATABASE_NAME"),
        'USER': os.environ.get("DATABASE_USER"),
        'PASSWORD': os.environ.get("DATABASE_PASSWORD"),
        'HOST': os.environ.get("DATABASE_HOST"),
        'PORT': os.environ.get("DATABASE_PORT"),
    }
    # 'secondary':{
    #     'ENGINE':'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR/'static']

MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR,'media')

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


SUPER_USER = {
    "ADMIN_EMAIL":os.environ.get("ADMIN_EMAIL"),
    "ADMIN_USERNAME":os.environ.get("ADMIN_USERNAME"),
    "ADMIN_PASSWORD":os.environ.get("ADMIN_PASSWORD"),
}


AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend', 
    # 'social_core.backends.google.GoogleOAuth2',
    # 'allauth.account.auth_backends.AuthenticationBackend', 
)


LOGIN_REDIRECT_URL = ''
LOGOUT_REDIRECT_URL = '/userlogin/'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587 
EMAIL_USE_TLS = True 
EMAIL_HOST_USER = 'patelakshar2711@gmail.com'
EMAIL_HOST_PASSWORD = 'oymy dkkb esiu beth'

SENDGRID_API_KEY = 'your_sendgrid_api_key'   # Not fetch key here

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],
    "EXCEPTION_HANDLER": "app_modules.base.exception.handle_exception",
    "DEFAULT_RENDERER_CLASSES": ["app_modules.base.renderers.BaseJSONRenderer"],
    "DEFAULT_PAGINATION_CLASS": "app_modules.base.pagination.CustomPagination",
    'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.IsAuthenticated',), 
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=7), 
    'BLACKLIST_AFTER_ROTATION': True,
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache', 
        'LOCATION': 'unique-cache-name',
    }
}

CELERY_BROKER_URL = 'amqp://guest:guest@localhost:5672//'  # Default RabbitMQ URL
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_BACKEND = 'rpc://'  # This stores results in RabbitMQ as well


CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_rabbitmq.core.RabbitmqChannelLayer',  # Correct backend path
        'CONFIG': {
            "host": "amqp://guest:guest@localhost:5672/",  # Full RabbitMQ URL
            "local_capacity": 100,  # Local capacity for the message buffer
            "remote_capacity": 100,  # Remote capacity in RabbitMQ
            "expiry": 60,  # Expiry time for messages in RabbitMQ
            "ssl_context": None,  # No SSL context if not using SSL
            "groups_exchange": "groups",  # The exchange for groups
        },
    },
}